// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer{
  id String @id @default(uuid()) @db.Uuid
  firstName String? @map("first_name")
  lastName String? @map("last_name")
  email String?
  phone String?
  address String?
  createdAt DateTime @map("created_at")

  quotations Quotation[]
  @@map("customers")
  }

  model Quotation{
    id Int @id @default(autoincrement())
    customerId String @db.Uuid @map("customer_id")
    createdAt DateTime @map("created_at") @default(now())
    status String @default("Pending")
    finalPrice Float @map("final_price")


    customer Customer @relation(fields: [customerId],references: [id])
    quotationStones QuotationStone[]
    quotationCutout QuotationCutout[]
      @@map("quotations")

  }
  model Stone{
    id Int @id @default(autoincrement())
    name String
    image String @map("image_url")
    description String
    width Int @map("width_mm") //in mm
    length Int @map("length_mm") //in mm
thickness Int  @map("thickness_mm")//in mm
price Float
availability String @default("Available")

quotationStone QuotationStone[]
      @@map("stones")

  }
  model StonePolish{
    id Int @id @default(autoincrement())
    name String
    pricePerMeter Float @map("price_per_meter")
    iamge String? @map("image_url")
    description String?

    quotationStones QuotationStone[]
    @@map("stone_polishes")
  }
  model QuotationStone{
    id Int @id @default(autoincrement())
    quotationId Int @map("quotation_id")
    stonePolishId Int @map("stone_polish_id") @default(0000)
    stoneId Int @map("stone_id") @default(0000)
    width Int @map("width_mm") //in mm
    length Int @map("length_mm") // in mm
    stoneName String @map("stone_name")
    polishName String @map("polish_name")

    quotation Quotation @relation(fields: [quotationId],references: [id],onDelete: Cascade)
    stonePolish StonePolish @relation(fields: [stonePolishId],references: [id],onDelete: SetDefault)
    stone Stone @relation(fields: [stoneId],references: [id],onDelete: SetDefault)
    @@map("quotation_stones")
  }
  model Cutout{
id Int @id @default(autoincrement())
name String
pricePerMeter Float @map("price_per_meter")
image String? @map("image_url")
description String?

quotationCutout QuotationCutout[]
    @@map("cutouts")
  }

model QuotationCutout{
id Int @id @default(autoincrement())
quotationId Int @map("quotation_id")
cutoutId Int @map("cutout_id")
width Int @map("width_mm") //in mm
length Int @map("length_mm") //in mm
totalPrice Float @map("total_price")

quotation Quotation @relation(fields: [quotationId],references: [id])
cutout Cutout @relation(fields: [cutoutId],references: [id])

@@map("quotation_cutouts")
}

model ContactUs{
id Int @id @default(autoincrement())
name String?
email String?
phone String
message String?
createdAt DateTime @map("created_at")
status String @default("Pending")
  @@map("contact_us")
}